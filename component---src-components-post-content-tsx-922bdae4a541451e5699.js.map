{"version":3,"sources":["webpack:///./src/components/Post/Content.tsx","webpack:///./src/components/Header/Link.tsx","webpack:///./src/components/Header/Menu.tsx"],"names":["pageQuery","Content","markdownRemark","data","frontmatter","html","className","title","createdDate","dangerouslySetInnerHTML","__html","CustomLink","to","children","getProps","isCurrent","Menu","Link"],"mappings":"6FAAA,sFAqCaA,EAAY,aAYVC,UA7CC,SAAC,GAAoB,IAC3BC,EAD2B,EAAlBC,KACTD,eACAE,EAAsBF,EAAtBE,YAAaC,EAASH,EAATG,KACrB,OACE,yBAAKC,UAAU,aACb,kBAAC,IAAD,MACA,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,SACb,wBAAIA,UAAU,sBAAsBF,EAAYG,OAChD,4BAAKH,EAAYI,cAEnB,yBACEF,UAAU,oBACVG,wBAAyB,CAAEC,OAAQL,S,yGCW9BM,EAnBI,SAAC,GAA4B,IAA1BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,SAYxB,OACE,kBAAC,OAAD,CAAMD,GAAIA,EAAIE,SAZC,SAAC,GAChB,OADgD,EAA9BC,UAEd,CACET,UACE,uEAEJ,CACEA,UACE,8FAKLO,ICpBMG,EAAO,WAClB,OACE,yBAAKV,UAAU,mCACb,kBAACW,EAAD,CAAML,GAAG,KAAT,SACA,kBAACK,EAAD,CAAML,GAAG,cAAT,YACA,kBAACK,EAAD,CAAML,GAAG,UAAT","file":"component---src-components-post-content-tsx-922bdae4a541451e5699.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport { Menu } from \"../Header/Menu\"\n//TODO Figure out how to transform MD list to HTML lists\nconst Content = ({ data }: Props) => {\n  const { markdownRemark } = data // data.markdownRemark holds your post data\n  const { frontmatter, html } = markdownRemark\n  return (\n    <div className=\"blog-post\">\n      <Menu />\n      <div className=\"container mx-auto\">\n        <div className=\"mb-16\">\n          <h1 className=\"text-3xl font-bold\">{frontmatter.title}</h1>\n          <h2>{frontmatter.createdDate}</h2>\n        </div>\n        <div\n          className=\"blog-post-content\"\n          dangerouslySetInnerHTML={{ __html: html }}\n        />\n      </div>\n    </div>\n  )\n}\n\ninterface Props {\n  data: {\n    markdownRemark: {\n      html: string\n      frontmatter: {\n        createdDate: string\n        path: string\n        title: string\n      }\n    }\n  }\n}\n\nexport const pageQuery = graphql`\n  query($path: String!) {\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\n      html\n      frontmatter {\n        createdDate\n        path\n        title\n      }\n    }\n  }\n`\nexport default Content\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport { LinkGetProps } from \"reach__router\"\n\ninterface Props {\n  to: string\n  children: string\n}\n\nconst CustomLink = ({ to, children }: Props) => {\n  const isActive = ({ isCurrent }: LinkGetProps) => {\n    return isCurrent\n      ? {\n          className:\n            \"block mt-4 inline-block mt-0 text-black font-mono mr-4 no-underline\",\n        }\n      : {\n          className:\n            \"block mt-4 inline-block mt-0 text-green-300 hover:text-black font-mono mr-4 no-underline\",\n        }\n  }\n  return (\n    <Link to={to} getProps={isActive}>\n      {children}\n    </Link>\n  )\n}\n\nexport default CustomLink\n","import React from \"react\"\nimport Link from \"./Link\"\n\nexport const Menu = () => {\n  return (\n    <nav className=\"flex justify-center p-6 text-lg\">\n      <Link to=\"/\">About</Link>\n      <Link to=\"/projects/\">Projects</Link>\n      <Link to=\"/blog/\">Blog</Link>\n    </nav>\n  )\n}\n"],"sourceRoot":""}