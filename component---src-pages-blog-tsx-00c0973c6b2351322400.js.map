{"version":3,"sources":["webpack:///./src/pages/blog.tsx","webpack:///./src/components/Header/Link.tsx","webpack:///./src/components/Header/Menu.tsx","webpack:///./src/components/Post/Tag.tsx","webpack:///./src/components/Card/Card.tsx","webpack:///./src/components/Card/Container.tsx","webpack:///./src/components/Card/index.ts"],"names":["Index","nodes","allMarkdownRemark","allImageSharp","map","post","i","frontmatter","draft","key","title","image","original","src","CustomLink","to","children","className","activeClassName","partiallyActive","Menu","Link","Tag","PostCard","props","onClick","path","navigate","window","open","url","style","height","alt","description","tags","split","tag","Container"],"mappings":"2KAwFeA,UAzDf,WAA+B,aAENC,EAFM,EAE3BC,kBAAqBD,MACrBE,EAH2B,EAG3BA,cAyBF,OACE,oCACE,6BACE,kBAAC,IAAD,OAEF,kBAAC,IAAD,KAEGF,EAAMG,KAAI,SAACC,EAAMC,GAGhB,IAFcD,EAAKE,YAAYC,MAM7B,OACE,kBAAC,IAAD,eACEC,IAAKJ,EAAKE,YAAYG,MACtBC,MACER,EAAcF,MAAMK,IAAMH,EAAcF,MAAMK,GAAGM,SAASC,KAExDR,EAAKE,qB,uEC3DVO,EAbI,SAAC,GAA4B,IAA1BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,SACxB,OACE,kBAAC,OAAD,CACED,GAAIA,EACJE,UAAU,2FACVC,gBAAiB,aACjBC,iBAAiB,GAEhBH,ICfP,kCAGO,IAAMI,EAAO,WAClB,OACE,yBAAKH,UAAU,mCACb,kBAACI,EAAD,CAAMN,GAAG,KAAT,SACA,kBAACM,EAAD,CAAMN,GAAG,cAAT,YACA,kBAACM,EAAD,CAAMN,GAAG,UAAT,W,85CCESO,EARH,SAAC,GAAiC,IAA/BZ,EAA+B,EAA/BA,MACb,OACE,0BAAMO,UAAU,4FAAhB,IACIP,I,YCqCOa,EA3BS,SAACC,GACvB,OACE,yBACEP,UAAU,sEACVQ,QAAS,WACPD,EAAME,KAAOC,mBAASH,EAAME,MAAQE,OAAOC,KAAKL,EAAMM,OAGxD,yBAAKb,UAAU,qCACb,yBAAKA,UAAU,kBAAkBc,MAAO,CAAEC,OAAQ,UAChD,yBACEf,UAAU,SACVJ,IAAKW,EAAMb,OAAS,2CACpBsB,IAAI,6BAGR,yBAAKhB,UAAU,kBACb,yBAAKA,UAAU,0BAA0BO,EAAMd,OAC/C,uBAAGO,UAAU,2BAA2BO,EAAMU,cAEhD,yBAAKjB,UAAU,aACZO,EAAMW,MAAQX,EAAMW,KAAKC,MAAM,KAAKhC,KAAI,SAAAiC,GAAG,OAAI,kBAAC,EAAD,CAAK3B,MAAO2B,WC3BvDC,EAJG,SAAC,GAAwB,IAAtBtB,EAAsB,EAAtBA,SACnB,OAAO,yBAAKC,UAAU,iCAAiCD,ICNzD","file":"component---src-pages-blog-tsx-00c0973c6b2351322400.js","sourcesContent":["import React, { ReactElement } from \"react\"\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport { Menu } from \"../components/Header/Menu\"\nimport { CardContainer, Card } from \"../components/Card\"\n\ninterface Query {\n  allMarkdownRemark: {\n    nodes: [\n      {\n        frontmatter: {\n          path: string\n          title: string\n          draft: boolean\n          createdDate: string\n          description: string\n          tags: string\n        }\n      }\n    ]\n  }\n  allImageSharp: {\n    nodes: [\n      {\n        original: {\n          src: string\n        }\n      }\n    ]\n  }\n}\n\nfunction Index(): ReactElement {\n  const {\n    allMarkdownRemark: { nodes },\n    allImageSharp,\n  } = useStaticQuery<Query>(graphql`\n    query AllPosts {\n      allMarkdownRemark {\n        nodes {\n          frontmatter {\n            draft\n            title\n            description\n            createdDate\n            tags\n            path\n          }\n        }\n      }\n      allImageSharp {\n        nodes {\n          original {\n            src\n          }\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <div>\n        <Menu />\n      </div>\n      <CardContainer>\n        {/* eslint-disable-next-line array-callback-return */}\n        {nodes.map((post, i) => {\n          const draft = post.frontmatter.draft\n\n          if (\n            (process.env.NODE_ENV === \"production\" && !draft) ||\n            process.env.NODE_ENV === \"development\"\n          )\n            return (\n              <Card\n                key={post.frontmatter.title}\n                image={\n                  allImageSharp.nodes[i] && allImageSharp.nodes[i].original.src\n                }\n                {...post.frontmatter}\n              />\n            )\n        })}\n      </CardContainer>\n    </>\n  )\n}\n\nexport default Index\n","import React from \"react\"\nimport { Link } from \"gatsby\"\n\ninterface Props {\n  to: string\n  children: string\n}\nconst CustomLink = ({ to, children }: Props) => {\n  return (\n    <Link\n      to={to}\n      className=\"block mt-4 inline-block mt-0 text-green-300 hover:text-black font-mono mr-4 no-underline\"\n      activeClassName={\"text-black\"}\n      partiallyActive={true}\n    >\n      {children}\n    </Link>\n  )\n}\n\nexport default CustomLink\n","import React from \"react\"\nimport Link from \"./Link\"\n\nexport const Menu = () => {\n  return (\n    <nav className=\"flex justify-center p-6 text-lg\">\n      <Link to=\"/\">About</Link>\n      <Link to=\"/projects/\">Projects</Link>\n      <Link to=\"/blog/\">Blog</Link>\n    </nav>\n  )\n}\n","import React from \"react\"\n\nconst Tag = ({ title }: { title: string }) => {\n  return (\n    <span className=\"inline-block bg-gray-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2\">\n      #{title}\n    </span>\n  )\n}\n\nexport default Tag\n","import React from \"react\"\nimport Tag from \"../Post/Tag\"\nimport { navigate } from \"gatsby\"\n\ninterface Props {\n  path?: string\n  url?: string\n  title: string\n  description: string\n  createdDate: string\n  tags?: string\n  image?: string\n}\n//TODO Adjust so all images have the same height\n\nexport const PostCard = (props: Props) => {\n  return (\n    <div\n      className=\"transform hover:scale-110 duration-150 cursor-pointer max-w-md mx-6\"\n      onClick={() => {\n        props.path ? navigate(props.path) : window.open(props.url)\n      }}\n    >\n      <div className=\"rounded overflow-hidden shadow-lg\">\n        <div className=\"overflow-hidden\" style={{ height: \"300px\" }}>\n          <img\n            className=\"w-full\"\n            src={props.image || \"https://tailwindcss.com/img/card-top.jpg\"}\n            alt=\"Sunset in the mountains\"\n          />\n        </div>\n        <div className=\"px-6 py-4 h-40\">\n          <div className=\"font-bold text-xl mb-2\">{props.title}</div>\n          <p className=\"text-gray-700 text-base\">{props.description}</p>\n        </div>\n        <div className=\"px-6 py-4\">\n          {props.tags && props.tags.split(\",\").map(tag => <Tag title={tag} />)}\n        </div>\n      </div>\n    </div>\n  )\n}\nexport default PostCard\n","import React, { ReactNode } from \"react\"\n\ninterface Props {\n  children: ReactNode\n}\nconst Container = ({ children }: Props) => {\n  return <div className=\"flex flex-wrap justify-center\">{children}</div>\n}\n\nexport default Container\n","export { default as Card } from \"./Card\"\nexport { default as CardContainer } from \"./Container\"\n"],"sourceRoot":""}