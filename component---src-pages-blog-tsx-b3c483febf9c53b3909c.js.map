{"version":3,"sources":["webpack:///./src/pages/blog.tsx","webpack:///./src/components/Header/Link.tsx","webpack:///./src/components/Header/Menu.tsx","webpack:///./src/components/Post/Tag.tsx","webpack:///./src/components/Card.tsx"],"names":["Index","nodes","allMarkdownRemark","allImageSharp","className","map","post","i","frontmatter","draft","key","title","image","original","src","CustomLink","to","children","activeClassName","partiallyActive","Menu","Link","Tag","PostCard","props","alt","onClick","path","navigate","window","open","url","description","tags","split","tag"],"mappings":"2KAwFeA,UAzDf,WAA+B,aAENC,EAFM,EAE3BC,kBAAqBD,MACrBE,EAH2B,EAG3BA,cAyBF,OACE,oCACE,6BACE,kBAAC,IAAD,OAEF,yBAAKC,UAAU,uBAEZH,EAAMI,KAAI,SAACC,EAAMC,GAGhB,IAFcD,EAAKE,YAAYC,MAM7B,OACE,kBAAC,IAAD,eACEC,IAAKJ,EAAKE,YAAYG,MACtBC,MACET,EAAcF,MAAMM,IAAMJ,EAAcF,MAAMM,GAAGM,SAASC,KAExDR,EAAKE,qB,uEC3DVO,EAbI,SAAC,GAA4B,IAA1BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,SACxB,OACE,kBAAC,OAAD,CACED,GAAIA,EACJZ,UAAU,2FACVc,gBAAiB,aACjBC,iBAAiB,GAEhBF,ICfP,kCAGO,IAAMG,EAAO,WAClB,OACE,yBAAKhB,UAAU,mCACb,kBAACiB,EAAD,CAAML,GAAG,KAAT,SACA,kBAACK,EAAD,CAAML,GAAG,cAAT,YACA,kBAACK,EAAD,CAAML,GAAG,UAAT,W,u5BCESM,EARH,SAAC,GAAiC,IAA/BX,EAA+B,EAA/BA,MACb,OACE,0BAAMP,UAAU,4FAAhB,IACIO,I,8CCQD,IAAMY,EAAW,SAACC,GACvB,OACE,yBAAKpB,UAAU,4BACb,yBAAKA,UAAU,qCACb,yBACEA,UAAU,wBACVU,IAAKU,EAAMZ,OAAS,2CACpBa,IAAI,0BACJC,QAAS,WACPF,EAAMG,KAAOC,mBAASJ,EAAMG,MAAQE,OAAOC,KAAKN,EAAMO,QAG1D,yBAAK3B,UAAU,aACb,yBAAKA,UAAU,0BAA0BoB,EAAMb,OAC/C,uBAAGP,UAAU,2BAA2BoB,EAAMQ,cAEhD,yBAAK5B,UAAU,aACZoB,EAAMS,MAAQT,EAAMS,KAAKC,MAAM,KAAK7B,KAAI,SAAA8B,GAAG,OAAI,kBAAC,EAAD,CAAKxB,MAAOwB","file":"component---src-pages-blog-tsx-b3c483febf9c53b3909c.js","sourcesContent":["import React, { ReactElement } from \"react\"\nimport { PostCard } from \"../components/Card\"\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport { Menu } from \"../components/Header/Menu\"\n\ninterface Query {\n  allMarkdownRemark: {\n    nodes: [\n      {\n        frontmatter: {\n          path: string\n          title: string\n          draft: boolean\n          createdDate: string\n          description: string\n          tags: string\n        }\n      }\n    ]\n  }\n  allImageSharp: {\n    nodes: [\n      {\n        original: {\n          src: string\n        }\n      }\n    ]\n  }\n}\n\nfunction Index(): ReactElement {\n  const {\n    allMarkdownRemark: { nodes },\n    allImageSharp,\n  } = useStaticQuery<Query>(graphql`\n    query AllPosts {\n      allMarkdownRemark {\n        nodes {\n          frontmatter {\n            draft\n            title\n            description\n            createdDate\n            tags\n            path\n          }\n        }\n      }\n      allImageSharp {\n        nodes {\n          original {\n            src\n          }\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <div>\n        <Menu />\n      </div>\n      <div className=\"flex justify-around\">\n        {/* eslint-disable-next-line array-callback-return */}\n        {nodes.map((post, i) => {\n          const draft = post.frontmatter.draft\n\n          if (\n            (process.env.NODE_ENV === \"production\" && !draft) ||\n            process.env.NODE_ENV === \"development\"\n          )\n            return (\n              <PostCard\n                key={post.frontmatter.title}\n                image={\n                  allImageSharp.nodes[i] && allImageSharp.nodes[i].original.src\n                }\n                {...post.frontmatter}\n              />\n            )\n        })}\n      </div>\n    </>\n  )\n}\n\nexport default Index\n","import React from \"react\"\nimport { Link } from \"gatsby\"\n\ninterface Props {\n  to: string\n  children: string\n}\nconst CustomLink = ({ to, children }: Props) => {\n  return (\n    <Link\n      to={to}\n      className=\"block mt-4 inline-block mt-0 text-green-300 hover:text-black font-mono mr-4 no-underline\"\n      activeClassName={\"text-black\"}\n      partiallyActive={true}\n    >\n      {children}\n    </Link>\n  )\n}\n\nexport default CustomLink\n","import React from \"react\"\nimport Link from \"./Link\"\n\nexport const Menu = () => {\n  return (\n    <nav className=\"flex justify-center p-6 text-lg\">\n      <Link to=\"/\">About</Link>\n      <Link to=\"/projects/\">Projects</Link>\n      <Link to=\"/blog/\">Blog</Link>\n    </nav>\n  )\n}\n","import React from \"react\"\n\nconst Tag = ({ title }: { title: string }) => {\n  return (\n    <span className=\"inline-block bg-gray-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2\">\n      #{title}\n    </span>\n  )\n}\n\nexport default Tag\n","import React from \"react\"\nimport Tag from \"./Post/Tag\"\nimport { navigate } from \"gatsby\"\n\ninterface Props {\n  path?: string\n  url?: string\n  title: string\n  description: string\n  createdDate: string\n  tags?: string\n  image?: string\n}\nexport const PostCard = (props: Props) => {\n  return (\n    <div className=\"container max-w-md mt-10\">\n      <div className=\"rounded overflow-hidden shadow-lg\">\n        <img\n          className=\"w-full cursor-pointer\"\n          src={props.image || \"https://tailwindcss.com/img/card-top.jpg\"}\n          alt=\"Sunset in the mountains\"\n          onClick={() => {\n            props.path ? navigate(props.path) : window.open(props.url)\n          }}\n        />\n        <div className=\"px-6 py-4\">\n          <div className=\"font-bold text-xl mb-2\">{props.title}</div>\n          <p className=\"text-gray-700 text-base\">{props.description}</p>\n        </div>\n        <div className=\"px-6 py-4\">\n          {props.tags && props.tags.split(\",\").map(tag => <Tag title={tag} />)}\n        </div>\n      </div>\n    </div>\n  )\n}\n"],"sourceRoot":""}